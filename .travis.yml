language: java

env:
  global:
    - MAVEN_OPTS="-Xmx512M -XX:+ExitOnOutOfMemoryError"
    - MAVEN_SKIP_CHECKS_AND_DOCS="-Dair.check.skip-all=true -Dmaven.javadoc.skip=true"
    - MAVEN_FAST_INSTALL="-DskipTests $MAVEN_SKIP_CHECKS_AND_DOCS -B -q -T C1"
  matrix:
    - MAVEN_CHECKS=true
    - TEST_SPECIFIC_MODULES=presto-tests
    - TEST_SPECIFIC_MODULES=presto-raptor
    - TEST_SPECIFIC_MODULES=presto-accumulo
    - TEST_SPECIFIC_MODULES=presto-cassandra,presto-hive,presto-kafka,presto-mysql,presto-postgresql,presto-redis
    - TEST_OTHER_MODULES=!presto-tests,!presto-raptor,!presto-accumulo,!presto-cassandra,!presto-hive,!presto-kafka,!presto-mysql,!presto-postgresql,!presto-redis,!presto-docs,!presto-server,!presto-server-rpm
    - PRODUCT_TESTS=true
    - HIVE_TESTS=true

sudo: required
dist: trusty

cache:
  directories:
    - $HOME/.m2/repository

services:
  - docker

before_install:
  # This is needed until Travis #4629 is fixed (https://github.com/travis-ci/travis-ci/issues/4629)
  - sed -i.bak -e 's|https://nexus.codehaus.org/snapshots/|https://oss.sonatype.org/content/repositories/codehaus-snapshots/|g' ~/.m2/settings.xml

install:
  - ./mvnw -v
  - |
    if [[ -v TEST_SPECIFIC_MODULES ]]; then
      ./mvnw install $MAVEN_FAST_INSTALL -pl $TEST_SPECIFIC_MODULES -am
    fi
  - |
    if [[ -v TEST_OTHER_MODULES ]]; then
      ./mvnw install $MAVEN_FAST_INSTALL -pl '!presto-docs,!presto-server,!presto-server-rpm'
    fi
  - |
    if [[ -v PRODUCT_TESTS ]]; then
      ./mvnw install $MAVEN_FAST_INSTALL -pl '!presto-docs,!presto-server-rpm'
    fi
  - |
    if [[ -v HIVE_TESTS ]]; then
      ./mvnw install $MAVEN_FAST_INSTALL -pl presto-hive-hadoop2 -am
    fi

script:
  - |
    if [[ -v MAVEN_CHECKS ]]; then
      ./mvnw install -DskipTests -B -T C1
    fi
  - |
    if [[ -v TEST_SPECIFIC_MODULES ]]; then
      ./mvnw test $MAVEN_SKIP_CHECKS_AND_DOCS -B -pl $TEST_SPECIFIC_MODULES
    fi
  - |
    if [[ -v TEST_OTHER_MODULES ]]; then
      ./mvnw test $MAVEN_SKIP_CHECKS_AND_DOCS -B -pl $TEST_OTHER_MODULES
    fi
  - |
    if [[ -v PRODUCT_TESTS ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        multinode -x quarantine,big_query,storage_formats,profile_specific_tests,tpcds
    fi
  - |
    if [[ -v PRODUCT_TESTS ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        singlenode-kerberos-hdfs-impersonation -g storage_formats,cli,hdfs_impersonation,authorization
    fi
  - |
    if [[ -v HIVE_TESTS ]]; then
      presto-hive-hadoop2/bin/run_on_docker.sh
    fi
  - |
    # Build presto-server-rpm for later artifact upload
    if [[ -v DEPLOY_S3_ACCESS_KEY && -v PRODUCT_TESTS ]]; then
       ./mvnw install $MAVEN_FAST_INSTALL -pl presto-server-rpm
    fi

before_cache:
  # Make the cache stable between builds by removing build output
  - rm -rf $HOME/.m2/repository/com/facebook

notifications:
  slack:
    secure: kXs/AA/ATmDDMchY8uGxg20oDsj7Xxl+rmFv+sUby0VUc7lD1y5rbtyE5MJS2y8XY07SttgjvG97wOYLVecxKB3pX6wHDXgUgnUEVGMUVrX8aWKmyykS9v/59zQy58mh8Xo0uWRRydoOkDBSDILyZAvFYopMVlOJm9GNlMM3wajB3W1LgXaA4n959uOTw4Phw/keeODO36KiExeWyr5y+oHdAYbXlRfqCFGhyq2bWRNk64K1NgsEtk83sMB1YtlUrp6ENdclEzvkjaXm2fD716ZbUmClvmxhAjHyCXS22w5RR/lI2hBj4I/fZqdfZ50cK2uAaR3q/3ZVuGUAYg7kJBdnWgICRpFOs0fPnUSe3GHc+XMdzTzPrDL8GuOfN9Dk+enmUHnegSChf+iRionbGdGmqkYK42ToD+desOKl3/ddmWBSC9DFReuI79l0X+WmhFpuoOvBeIuiKZ1TYvQ0aizJOybCwkDTAZs1flHZjCc/D+bYN/OARJFDoS00jrlI876SYn3nefyVpmg+jYhMUlIlbJ13htZBhDjTCgN+GI+H4e8W8Wp4Got5ngMO+VD1ytL2AGfGvy3A5KwlfymkoJEZXFY38Gmse1fDw/BwELKWMq1PpiohJC/OUGEEOmw1tnAegtXl35O+xrJsiBz4DroCiNS7Pdc+znviQIXBYtU=

before_deploy:
  - mkdir /tmp/artifacts
  - cp -n presto-server/target/presto-server-*.tar.gz /tmp/artifacts
  - cp -n presto-server-rpm/target/presto-server-rpm-*.x86_64.rpm /tmp/artifacts
  - cp -n presto-product-tests/target/presto-product-tests-*-executable.jar /tmp/artifacts
  - cp -n presto-jdbc/target/presto-jdbc-*.jar /tmp/artifacts
  - cp -n presto-cli/target/presto-cli-*-executable.jar /tmp/artifacts
  - echo $TRAVIS_COMMIT > /tmp/artifacts/git-revision.txt
  - echo "<script>location='https://travis-ci.org/${TRAVIS_REPO_SLUG}/builds/${TRAVIS_BUILD_ID}'</script>"
    > /tmp/artifacts/travis_build.html
  - ls -lah /tmp/artifacts

deploy:
  on:
    all_branches: true
    condition: -v DEPLOY_S3_ACCESS_KEY && -v PRODUCT_TESTS
  provider: s3
  access_key_id: ${DEPLOY_S3_ACCESS_KEY}
  secret_access_key: ${DEPLOY_S3_SECRET_KEY}
  bucket: ${DEPLOY_S3_BUCKET}
  skip_cleanup: true
  local-dir: /tmp/artifacts
  upload-dir: travis_build_artifacts/${TRAVIS_REPO_SLUG}/${TRAVIS_BRANCH}/${TRAVIS_JOB_NUMBER}
  acl: public_read
